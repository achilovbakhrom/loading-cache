{"version":3,"file":"index.js","sources":["../src/abstract/LoadingCache.ts","../src/promised-cache/PromisedCache.ts","../src/observable-cache/ObservableCache.ts"],"sourcesContent":["import {\n  CacheCollection,\n  CacheRemovalCause,\n  HashCache,\n  KeyedCacheOptions,\n  KeyedCache,\n  REMOVAL_CAUSE_EXPLICIT,\n  REMOVAL_CAUSE_REPLACED\n} from \"@umidbekkarimov/collections\";\n\nexport interface LoadingCacheOptions<K, V> extends KeyedCacheOptions<K, V> {\n  loader: (key: K) => V;\n  keyHasher?: (key: K) => string | number;\n}\n\nexport abstract class LoadingCache<K, V> {\n  protected cache: CacheCollection<K, V>;\n\n  constructor(protected options: LoadingCacheOptions<K, V>) {\n    const { keyHasher } = options;\n\n    if (typeof options.loader !== \"function\") {\n      throw new TypeError(\"LoadingCache: `loader` expected to be a `function`\");\n    }\n\n    const cacheOptions: KeyedCacheOptions<K, V> = {\n      ticker: options.ticker,\n      maxSize: options.maxSize,\n      expireAfterAccess: options.expireAfterAccess,\n      expireAfterWrite: options.expireAfterWrite,\n      onRemove: (entry, cause) => {\n        if (cause !== REMOVAL_CAUSE_EXPLICIT) {\n          this.onRemove(entry, cause);\n        }\n      }\n    };\n\n    if (keyHasher) {\n      this.cache = new HashCache({ keyHasher, ...cacheOptions });\n    } else {\n      this.cache = new KeyedCache(cacheOptions);\n    }\n  }\n\n  /**\n   * Returns the approximate number of entries in this cache.\n   */\n  public get size(): number {\n    return this.cache.size;\n  }\n\n  public get maxSize(): number | undefined {\n    return this.cache.maxSize;\n  }\n\n  public get expireAfterAccess(): number {\n    return this.cache.expireAfterAccess;\n  }\n\n  public get expireAfterWrite(): number {\n    return this.cache.expireAfterWrite;\n  }\n\n  /**\n   * Sets the `value` for `the` key in this `cache`. Returns `value` or it's wrapped presentation.\n   */\n  public abstract set(key: K, value: V): V;\n\n  /**\n   * Returns a boolean asserting whether a value has been associated to the `key` in this cache or not.\n   */\n  public has(key: K): boolean {\n    return this.cache.has(key);\n  }\n\n  /**\n   * Returns the `value` associated with `key` in this cache, first loading that value if necessary.\n   */\n  public get(key: K): V {\n    return this.cache.has(key)\n      ? this.cache.get(key)!\n      : this.set(key, this.options.loader(key));\n  }\n\n  /**\n   * Loads a new value for key `key`.\n   */\n  public refresh(key: K): V {\n    if (this.has(key)) {\n      const value = this.cache.peek(key)!;\n\n      this.cache.delete(key);\n\n      this.onRemove([key, value], REMOVAL_CAUSE_REPLACED);\n    }\n\n    return this.get(key);\n  }\n\n  /**\n   * Returns the `value` associated with `key` in this cache, or `undefined` if there is no cached value for `key`.\n   */\n  public getIfPresent(key: K): V | undefined {\n    return this.has(key) ? this.get(key) : undefined;\n  }\n\n  /**\n   * Removes any value associated to the `key` and returns the value that `LoadingCache#has(key)`\n   * would have previously returned. `LoadingCache#has(key)` will return false afterwards.\n   */\n  public delete(key: K): boolean {\n    const value = this.cache.peek(key);\n\n    if (!value) {\n      return false;\n    }\n\n    this.cache.delete(key);\n\n    this.onRemove([key, value], REMOVAL_CAUSE_EXPLICIT);\n\n    return true;\n  }\n\n  /**\n   * Removes any values associated to the `keys`.\n   */\n  public deleteAll(keys: Iterable<K>): void {\n    for (const key of keys) {\n      this.delete(key);\n    }\n  }\n\n  /**\n   * Removes all key/value pairs from this cache.\n   */\n  public clear(): void {\n    const entries = Array.from(this.entries());\n\n    this.cache.clear();\n\n    entries.forEach(entry => {\n      this.onRemove(entry, REMOVAL_CAUSE_EXPLICIT);\n    });\n  }\n\n  /**\n   * Returns a new `Iterator` object that contains an array of [`key`, `value`] for each element in this cache.\n   */\n  public entries(): IterableIterator<[K, V]> {\n    return this.cache.entries();\n  }\n\n  /**\n   * Returns a new `Iterator` object that contains an array of [`key`, `value`] for each element in this cache.\n   */\n  public [Symbol.iterator](): IterableIterator<[K, V]> {\n    return this.entries();\n  }\n\n  protected onRemove(entry: [K, V], cause: CacheRemovalCause): void {\n    if (this.options.onRemove) {\n      this.options.onRemove(entry, cause);\n    }\n  }\n}\n","import { LoadingCache } from \"../abstract/LoadingCache\";\n\nexport class PromisedCache<K, V> extends LoadingCache<K, Promise<V>> {\n  public set(key: K, value: Promise<V>): Promise<V> {\n    const promise = Promise.resolve(value).catch((error: Error) => {\n      this.cache.delete(key);\n\n      throw error;\n    });\n\n    this.cache.set(key, promise);\n\n    return promise;\n  }\n}\n","import { KeyedCacheOptions } from \"@umidbekkarimov/collections\";\nimport { Observable } from \"rxjs/Observable\";\nimport { DeferObservable } from \"rxjs/observable/DeferObservable\";\nimport { ErrorObservable } from \"rxjs/observable/ErrorObservable\";\nimport { IntervalObservable } from \"rxjs/observable/IntervalObservable\";\nimport { catchError } from \"rxjs/operators/catchError\";\nimport { filter } from \"rxjs/operators/filter\";\nimport { finalize } from \"rxjs/operators/finalize\";\nimport { mergeStatic } from \"rxjs/operators/merge\";\nimport { publishReplay } from \"rxjs/operators/publishReplay\";\nimport { refCount } from \"rxjs/operators/refCount\";\nimport { repeatWhen } from \"rxjs/operators/repeatWhen\";\nimport { share } from \"rxjs/operators/share\";\nimport { IScheduler } from \"rxjs/Scheduler\";\nimport { Subject } from \"rxjs/Subject\";\nimport { LoadingCache } from \"../abstract/LoadingCache\";\n\nexport interface ObservableCacheOptions<K, V>\n  extends KeyedCacheOptions<K, Observable<V>> {\n  ticker?: IScheduler;\n  keyHasher?: (key: K) => string | number;\n  loader: (key: K) => Promise<V> | Observable<V>;\n}\n\nexport class ObservableCache<K, V> extends LoadingCache<K, Observable<V>> {\n  private repeatSubject = new Subject<K>();\n  private observers = new Map<K, Observable<V>>();\n\n  private ticker?: IScheduler;\n\n  constructor(options: ObservableCacheOptions<K, V>) {\n    super({\n      ...options,\n      loader: (key: K) => new DeferObservable(() => options.loader(key))\n    });\n\n    this.ticker = options.ticker;\n  }\n\n  public set(key: K, value: Observable<V>): Observable<V> {\n    return new DeferObservable(() => {\n      const stream = value.pipe(\n        publishReplay(1),\n        refCount(),\n        catchError((error: Error) => {\n          this.cache.delete(key);\n\n          return new ErrorObservable(error);\n        })\n      );\n\n      this.cache.set(key, stream);\n\n      return stream;\n    });\n  }\n\n  public get(key: K): Observable<V> {\n    return new DeferObservable(() => super.get(key));\n  }\n\n  public refresh(key: K): Observable<V> {\n    return new DeferObservable(() => {\n      const value = super.refresh(key);\n\n      this.repeatSubject.next(key);\n\n      return value;\n    });\n  }\n\n  public getObserver(key: K): Observable<V> {\n    return new DeferObservable(() => {\n      if (this.observers.has(key)) {\n        return this.observers.get(key)!;\n      }\n\n      const repeatAfter = Math.max(\n        0,\n        this.expireAfterWrite,\n        this.expireAfterAccess\n      );\n\n      let repeatStream: Observable<any> = this.repeatSubject.pipe(\n        filter((k: K) => k === key)\n      );\n\n      if (repeatAfter > 0) {\n        repeatStream = mergeStatic(\n          repeatStream,\n          new IntervalObservable(repeatAfter, this.ticker)\n        );\n      }\n\n      const stream = new DeferObservable(() => this.get(key)).pipe(\n        repeatWhen(() => repeatStream),\n        finalize(() => this.observers.delete(key)),\n        share()\n      );\n\n      this.observers.set(key, stream);\n\n      return stream;\n    });\n  }\n}\n"],"names":["tslib_1.__values","tslib_1.__extends","DeferObservable","Subject","publishReplay","refCount","catchError","ErrorObservable","filter","IntervalObservable","repeatWhen","finalize","share"],"mappings":"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"}